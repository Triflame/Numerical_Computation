# -*- coding: utf-8 -*-
"""
Created on Sun Apr 10 18:00:53 2016

@author: Triflame
"""

from __future__ import division
import sympy as sp
test = open("test.txt", "w")

def Newton (f, x_0, epsilon, MAXREPT):
    print ("The initial value x is: %.1f" % x_0)
    x = sp.Symbol("x")
    x_k1 = x_k = x_0
    df = sp.diff(f, x)
    
    for i in range (MAXREPT):
        df0 = float(df.subs(x, x_k1))
        if df0 == 0 :
            print ("Step: %d Please choose a corret initial value!" % (i+1))
            return 0, -1
        f0  = float(f.subs(x, x_k1))
        x_k1 = x_k - f0 / df0
        if abs (x_k1 - x_k) < epsilon and i < MAXREPT :
            print ("Step: %d The root is x = %.12f" % (i+1, x_k1))
            return x_k1, i+1
        x_k = x_k1
    return x_k1, i+1


def Secant (f, x_0, x_1, epsilon, MAXREPT):
    print ("The initial value x is: %.1f, %.1f" % (x_0, x_1))
    x_k  = x_0
    x_k1 = x_1
    for i in range (MAXREPT):
        fx_k   = float(f.subs(x, x_k))
        fx_k1  = float(f.subs(x, x_k1))
        if fx_k == fx_k1 :
            print ("Not find the root!!")
            return x_k1, 1
        x_k2 = x_k1 - fx_k1*(x_k1 - x_k) / (fx_k1 - fx_k)
        if abs (x_k1 - x_k2) < epsilon and i < MAXREPT :
            print ("Step: %d The root is x = %.12f" % (i+1, x_k1))
            return x_k2, i+1
        elif abs (x_k1 - x_k2) >= epsilon and i == MAXREPT-1:
            print ("Not find the root!")
            return 0, MAXREPT
        x_k = x_k1
        x_k1 = x_k2
    return x_k2, i+1

x_0 = []
x = sp.Symbol("x")
f = eval (input ("Please input the function expression: "))
n = int (input ("How many initial value: "))
for i in range(n):
    x_0.append (float (input ("Value %d: " % (i+1))))


print ("Newton iteration")
test.write ("Newton iteration\n\n")
for i in range(n):
    x = sp.Symbol("x")
    epsilon = 1.0e-10
    MAXREPT = 10000
    root, N = Newton (f, x_0[i], epsilon, MAXREPT)
    test.write ("%4.1f , %15.12f , %d\n" % (x_0[i], root, N))
    
print ("Secant iteration")
test.write ("\nSecant iteration\n\n")
for i in range(n-1):
    x = sp.Symbol("x")
    epsilon = 1.0e-10
    MAXREPT = 10000
    root, N = Secant (f, x_0[i], x_0[i+1], epsilon, MAXREPT)
    test.write ("%4.1f, %4.1f , %15.12f , %d\n" % (x_0[i], x_0[i+1], root, N))
test.close()
